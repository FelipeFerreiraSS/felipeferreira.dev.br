// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  firstName       String
  lastName        String
  email           String   @unique
  password        String
  type            String
  posts           Post[]
  profileImageUrl String?
  images          Image[]  @relation("UserImages")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Post {
  id            Int      @id @default(autoincrement())
  authorId      Int
  slug          String   @unique
  published     Boolean  @default(false)
  title         String
  headerImage   Image?   @relation(fields: [headerImageId], references: [id])
  headerImageId Int?
  summary       String
  audioPostUrl  String?
  readTime      String?
  tags          Tag[]    @relation("PostTags")
  content       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  author User @relation(fields: [authorId], references: [id])
}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  posts     Post[]   @relation("PostTags")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id           Int      @id @default(autoincrement())
  imageUrl     String
  uploadedById Int?
  uploadedBy   User?    @relation("UserImages", fields: [uploadedById], references: [id])
  posts        Post[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
